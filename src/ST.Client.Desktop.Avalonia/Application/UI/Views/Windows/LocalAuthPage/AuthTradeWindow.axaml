<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        Width="800" Height="600" x:Name="u"
        x:Class="System.Application.UI.Views.Windows.AuthTradeWindow"
        xmlns:resx="clr-namespace:System.Application.UI.Resx;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:vm="clr-namespace:System.Application.UI.ViewModels;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
        xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
        xmlns:ms="clr-namespace:System.Application.Models.Settings;assembly=System.Application.SteamTools.Client.Desktop"
        FontFamily="{Binding Source={x:Static ms:UISettings.FontName},Path=Value, Mode=OneWay,Converter={StaticResource NameToFontFamilyConverter}}"
        Background="Transparent"
        ExtendClientAreaTitleBarHeightHint="30"
        x:DataType="vm:AuthTradeWindowViewModel"
        x:CompileBindings="True"
        Title="{Binding Title}">
    <Panel HorizontalAlignment="Stretch">
        <controls:TitleBar></controls:TitleBar>
        <Panel IsVisible="{Binding !IsLoggedIn}">
            <StackPanel VerticalAlignment="Center" Spacing="8" Margin="10,0" Width="250">
                <PathIcon Data="{StaticResource SteamDrawing}" Width="100" Height="100"
                          HorizontalAlignment="Center" Margin="0 0 0 25"></PathIcon>
                <TextBox Watermark="{ReflectionBinding Path=Res.Steam_User,Mode=OneWay,Source={x:Static resx:R.Current}}" Text="{Binding UserName}"></TextBox>

                <TextBox Watermark="{ReflectionBinding Path=Res.Steam_Password,Mode=OneWay,Source={x:Static resx:R.Current}}" PasswordChar="*" Text="{Binding Password}" Classes="revealPasswordButton"></TextBox>

                <Panel Margin="2 0 6 0">
                    <CheckBox Content="{ReflectionBinding Path=Res.User_Rememberme,Mode=OneWay,Source={x:Static resx:R.Current}}" IsChecked="{Binding RememberMe}"></CheckBox>
                </Panel>

                <StackPanel IsVisible="{Binding IsRequiresCaptcha}" Orientation="Vertical" HorizontalAlignment="Center" Spacing="10">
                    <Border Width="206" Height="37">
                        <Image Width="206" Height="37" Source="{Binding CodeImage,Converter={StaticResource BitmapAssetValueConverter}}">
                        </Image>
                    </Border>
                    <TextBox Watermark="{ReflectionBinding Path=Res.Steam_ImageCodeTip,Mode=OneWay,Source={x:Static resx:R.Current}}" Text="{Binding CodeImageChar}" MaxWidth="200"></TextBox>
                </StackPanel>

                <Button Content="{ReflectionBinding Path=Res.Login,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                        Command="{ReflectionBinding LoginButton_Click,Mode=OneTime}">
                </Button>
            </StackPanel>
            <TextBlock
                VerticalAlignment="Bottom"
                HorizontalAlignment="Center"
                Margin="0 5"
                Text="{ReflectionBinding Path=Res.LocalAuth_SteamTradeLoginTip,Mode=OneWay,Source={x:Static resx:R.Current}}"
                TextAlignment="Center"
                TextWrapping="WrapWithOverflow"></TextBlock>
        </Panel>

        <Panel HorizontalAlignment="Stretch" IsVisible="{Binding IsLoggedIn}">
            <DockPanel>
                <Grid DockPanel.Dock="Top" ColumnDefinitions="*,Auto" Margin="20 40 20 10">
                    <StackPanel Spacing="10" Orientation="Horizontal">
                        <Button Content="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_ConfirmAll,Mode=OneWay,Source={x:Static resx:R.Current}}" Command="{ReflectionBinding ConfirmAllButton_Click,Mode=OneTime}" IsEnabled="{Binding IsConfirmationsEmpty}"></Button>
                        <Button Content="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_CancelAll,Mode=OneWay,Source={x:Static resx:R.Current}}" Command="{ReflectionBinding CancelAllButton_Click,Mode=OneTime}"  IsEnabled="{Binding IsConfirmationsEmpty}"></Button>
                        <Button Content="{ReflectionBinding Path=Res.Refresh,Mode=OneWay,Source={x:Static resx:R.Current}}" Command="{ReflectionBinding Refresh_Click,Mode=OneTime}"></Button>
                        <Button Content="{ReflectionBinding Path=Res.Logout,Mode=OneWay,Source={x:Static resx:R.Current}}" Command="{ReflectionBinding Logout_Click,Mode=OneTime}"></Button>
                    </StackPanel>
                    <TextBlock Text="{Binding ConfirmationsConutMessage}" Grid.Column="1"
                               VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="16"></TextBlock>
                </Grid>
                <Panel DockPanel.Dock="Bottom">
                    <StackPanel IsVisible="{Binding IsLoading}" VerticalAlignment="Center" Spacing="15" Margin="20 0" x:Name="load">
                        <!--<TextBlock x:Name="EmptyTip" IsVisible="{Binding !IsConfirmationsEmpty}"
                                Text="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_ListNullTip,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                TextWrapping="WrapWithOverflow"
                                VerticalAlignment="Center" HorizontalAlignment="Center">
                        </TextBlock>-->
                        <!--<i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior Binding="{Binding IsLoading}" ComparisonCondition="Equal" Value="True">
                                <ia:ChangePropertyAction TargetObject="{Binding #EmptyTip}" PropertyName="IsVisible" Value="False"/>
                                <ia:ChangePropertyAction TargetObject="{Binding #load}" PropertyName="IsVisible" Value="True"/>
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior Binding="{Binding IsLoading}" ComparisonCondition="Equal" Value="False">
                                <ia:ChangePropertyAction TargetObject="{Binding #EmptyTip}" PropertyName="IsVisible" Value="True"/>
                                <ia:ChangePropertyAction TargetObject="{Binding #load}" PropertyName="IsVisible" Value="False"/>
                            </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>-->
                        <controls:ProgressRing IsIndeterminate="True" HorizontalAlignment="Stretch" Height="100" Width="100">
                        </controls:ProgressRing>
                        <TextBlock Text="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_GetTip,Mode=OneWay,Source={x:Static resx:R.Current}}" HorizontalAlignment="Center" FontSize="14"></TextBlock>
                    </StackPanel>

                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"  Padding="0 0 0 10">
                        <ItemsRepeater Items="{Binding Confirmations,Mode=OneWay}">
                            <ItemsRepeater.Layout>
                                <!--<UniformGridLayout ItemsJustification="SpaceEvenly" MinRowSpacing="20" Orientation="Horizontal"
                                       MaximumRowsOrColumns="6" />-->
                                <StackLayout Orientation="Vertical" Spacing="20"></StackLayout>
                            </ItemsRepeater.Layout>
                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate>
                                    <Panel x:Name="panel" MinWidth="100" Margin="20 0">
                                        <Border x:Name="card" Classes="paper" CornerRadius="0" Background="{DynamicResource ThemeBrushKey}">
                                            <Grid Width="{ReflectionBinding #panel.Width}"
                                                  ColumnDefinitions="Auto,*,Auto">
                                                <Panel>
                                                    <Image Width="128"
                                                           Height="128"
                                                           Stretch="None"
                                                           Margin="10 0"
                                                           Source="{Binding ImageStream^,Converter={StaticResource BitmapAssetValueConverter}}"/>
                                                </Panel>
                                                <Panel Grid.Column="1" Margin="10,5">
                                                    <StackPanel>
                                                        <DockPanel LastChildFill="True">
                                                            <controls:ScrollingTextBlock Text="{Binding Details}" FontSize="24" Foreground="{DynamicResource HighlightForegroundBrushKey}" TextWrapping="WrapWithOverflow" Cursor="Hand">
                                                            </controls:ScrollingTextBlock>
                                                        </DockPanel>

                                                        <TextBlock Text="{Binding Traded}" FontSize="16" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                                                        <TextBlock Text="{Binding When}" FontSize="16" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                                                    </StackPanel>
                                                </Panel>
                                                <Grid Grid.Column="3" RowDefinitions="*,Auto">
                                                    <Panel>
                                                        <TextBlock x:Name="OperateText" IsVisible="{Binding IsOperate}"
                                                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                   FontSize="16" Margin="0 0 10 0">
                                                            <i:Interaction.Behaviors>
                                                                <ia:DataTriggerBehavior Binding="{Binding IsOperate}" ComparisonCondition="Equal" Value="1">
                                                                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #OperateText}" PropertyName="Text" Value="已确认"/>
                                                                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #OperatePanel}" PropertyName="IsVisible" Value="False"/>
                                                                </ia:DataTriggerBehavior>
                                                                <ia:DataTriggerBehavior Binding="{Binding IsOperate}" ComparisonCondition="Equal" Value="2">
                                                                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #OperateText}" PropertyName="Text" Value="已取消"/>
                                                                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #OperatePanel}" PropertyName="IsVisible" Value="False"/>
                                                                </ia:DataTriggerBehavior>
                                                                <ia:DataTriggerBehavior Binding="{Binding IsOperate}" ComparisonCondition="Equal" Value="0">
                                                                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #OperateText}" PropertyName="IsVisible" Value="False"/>
                                                                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #OperatePanel}" PropertyName="IsVisible" Value="True"/>
                                                                </ia:DataTriggerBehavior>
                                                            </i:Interaction.Behaviors>
                                                        </TextBlock>
                                                    </Panel>
                                                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0 0 0 0" IsVisible="True" x:Name="OperatePanel">
                                                        <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}" BorderThickness=".66 .66 .66 0" ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_Confirm,Mode=OneWay,Source={x:Static resx:R.Current}}">
                                                            <Button Classes="flatbutton" Cursor="Hand" IsEnabled="{Binding ButtonEnable}" Content="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_Confirm,Mode=OneWay,Source={x:Static resx:R.Current}}" HorizontalAlignment="Stretch" FontSize="16" Background="{DynamicResource ThemeBrushKey}" Command="{ReflectionBinding #u.DataContext.ConfirmTrade_Click}" CommandParameter="{Binding}"></Button>
                                                        </Border>
                                                        <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}" BorderThickness="0 .66 0 0" ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_Cancel,Mode=OneWay,Source={x:Static resx:R.Current}}">
                                                            <Button Classes="flatbutton" Cursor="Hand" IsEnabled="{Binding ButtonEnable}" Content="{ReflectionBinding Path=Res.LocalAuth_AuthTrade_Cancel,Mode=OneWay,Source={x:Static resx:R.Current}}" Background="{DynamicResource ThemeBrushKey}" HorizontalAlignment="Stretch" FontSize="16" Command="{ReflectionBinding #u.DataContext.CancelTrade_Click}" CommandParameter="{Binding}"></Button>
                                                        </Border>
                                                    </StackPanel>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Panel>
                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>
                    </ScrollViewer>
                </Panel>
            </DockPanel>
        </Panel>
        <!--Toast-->
        <controls:ToastMessage />
    </Panel>
</Window>
