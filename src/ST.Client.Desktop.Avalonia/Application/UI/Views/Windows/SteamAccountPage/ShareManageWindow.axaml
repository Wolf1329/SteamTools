<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        Width="600" Height="450"
        x:Class="System.Application.UI.Views.Windows.ShareManageWindow"
        xmlns:resx="clr-namespace:System.Application.UI.Resx;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:vm="clr-namespace:System.Application.UI.ViewModels;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:ms="clr-namespace:System.Application.Models.Settings;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:gif="using:AvaloniaGif"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
        xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
        FontFamily="{Binding Source={x:Static ms:UISettings.FontName},Path=Value, Mode=OneWay,Converter={StaticResource NameToFontFamilyConverter}}"
        Background="Transparent"
        ExtendClientAreaTitleBarHeightHint="30"
        x:Name="u"
        Title="{Binding Title}"
        x:DataType="vm:ShareManageViewModel"
        x:CompileBindings="True">
  <Panel>
    <controls:TitleBar></controls:TitleBar>
    <Menu
               Margin="0 0 145 0" Height="30"
               HorizontalAlignment="Right"
               VerticalAlignment="Top">
        <MenuItem Width="50" Command="{ReflectionBinding About_Click}"
                 ToolTip.Tip="{ReflectionBinding Path=Res.About,Mode=OneWay,Source={x:Static resx:R.Current}}">
        <MenuItem.Header>
          <PathIcon Data="{StaticResource AboutPageSvg}" Width="14"></PathIcon>
        </MenuItem.Header> 
      </MenuItem>
      <MenuItem Width="50" Command="{ReflectionBinding Refresh_Click}"
                 ToolTip.Tip="{ReflectionBinding Path=Res.RefreshList,Mode=OneWay,Source={x:Static resx:R.Current}}">
        <MenuItem.Header>
          <PathIcon Data="{StaticResource RefreshDrawing}" Width="14"></PathIcon>
        </MenuItem.Header> 
      </MenuItem>
      <MenuItem Width="50" Command="{ReflectionBinding SetActivity_Click}"
               ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ProtectionAuth_SaveApply,Mode=OneWay,Source={x:Static resx:R.Current}}">
        <MenuItem.Header>
          <PathIcon Data="{StaticResource SaveDrawing}" Width="14"></PathIcon>
        </MenuItem.Header>
      </MenuItem>
    </Menu>
    <TextBlock IsVisible="{CompiledBinding IsAuthorizedListEmpty}"
          Text="{ReflectionBinding Path=Res.GameList_AddHideAppEmpty,Mode=OneWay,Source={x:Static resx:R.Current}}"
          TextWrapping="WrapWithOverflow"
          VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
    <ScrollViewer  HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto"
                   Padding="{StaticResource TitleBarAfterMargin}">
      <ItemsRepeater Items="{CompiledBinding AuthorizedList}">
        <ItemsRepeater.Layout>
          <!--<UniformGridLayout ItemsJustification="SpaceEvenly" MinRowSpacing="20" Orientation="Horizontal"
                                       MaximumRowsOrColumns="6" />-->
          <StackLayout Orientation="Vertical" Spacing="10"></StackLayout>
        </ItemsRepeater.Layout>
        <ItemsRepeater.ItemTemplate>
          <DataTemplate>
            <Border x:Name="card"
                    Classes="paper" Background="{DynamicResource ThemeBrushKey}" Margin="5"  > 
              <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{ReflectionBinding #card}">
                  <ia:ChangePropertyAction TargetObject="{ReflectionBinding #delete_btn}" PropertyName="IsVisible" Value="True"/>
                </ia:EventTriggerBehavior>
                <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{ReflectionBinding #card}">
                  <ia:ChangePropertyAction TargetObject="{ReflectionBinding #delete_btn}" PropertyName="IsVisible" Value="False"/>
                </ia:EventTriggerBehavior>
              </i:Interaction.Behaviors>

              <Grid Height="92"
                    ColumnDefinitions="Auto,*,Auto">
                <Panel x:Name="avatar" Cursor="Hand"
                         ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_OpenUserUrl,Mode=OneWay,Source={x:Static resx:R.Current}}">
                  <!--OpenUserProfileUrl-->
                  <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{ReflectionBinding #avatar}">
                      <ia:InvokeCommandAction Command="{ReflectionBinding #u.DataContext.OpenUserProfileUrl}" CommandParameter="{Binding}"/>
                    </ia:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                  <gif:Image2
                         Width="92"
                         AutoStart="true"
                         Stretch="UniformToFill"
                         StretchDirection="Both"
                         Source="{Binding AvatarStream^}">
                  </gif:Image2> 
                  <Image Width="92" Stretch="UniformToFill" IsVisible="{Binding AvatarStream^,Converter={StaticResource IsNullConverter}}"
                         Source="avares://System.Application.SteamTools.Client.Desktop.Avalonia/Application/UI/Assets/AppResources/avater.jpg">
                  </Image>
                  <!--<gif:Image2 Width="184" Height="184" 
                                            AutoStart="true"
                                            Source="{Binding MiniProfile.AvatarFrameStream^}"
                                            Stretch="Uniform" 
                                            IsVisible="{Binding MiniProfile.AvatarFrameStream^,Converter={StaticResource IsNullConverter},ConverterParameter=invert}"/>-->
                </Panel>
                <Panel Grid.Column="1" Margin="10 5">
                  <StackPanel>
                    <DockPanel LastChildFill="True">
                      <controls:ProgressRing IsIndeterminate="True"
                                              ToolTip.Tip="{ReflectionBinding Path=Res.Loading,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                             HorizontalAlignment="Stretch" Height="30"
                                             Width="30"
                                            IsVisible="{Binding SteamNickName,Converter={StaticResource IsNullConverter}}"/>
                      <Ellipse VerticalAlignment="Center"
                 HorizontalAlignment="Center" x:Name="circle" Margin="2 -5 5 0" Height="10" Width="10" StrokeThickness="0" ToolTip.Tip="{Binding OnlineState}">
                        <i:Interaction.Behaviors>
                          <ia:DataTriggerBehavior Binding="{Binding OnlineState}" ComparisonCondition="Equal" Value="online">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #circle}" PropertyName="Fill" Value="#08D969"/>
                          </ia:DataTriggerBehavior>
                          <ia:DataTriggerBehavior Binding="{Binding OnlineState}" ComparisonCondition="Equal" Value="offline">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #circle}" PropertyName="Fill" Value="#adadad"/>
                          </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                      </Ellipse>
                      <controls:ScrollingTextBlock x:Name="nickname"
                                                   Text="{Binding SteamNickName}"
                                                   FontSize="20"
                                                   Foreground="{DynamicResource HighlightForegroundBrushKey}"
                                                   Cursor="Hand"
                                                   ToolTip.Tip="{ReflectionBinding Path=Res.Top,Mode=OneWay,Source={x:Static resx:R.Current}}">
                        <i:Interaction.Behaviors>
                          <ia:EventTriggerBehavior EventName="Tapped"
                                                   SourceObject="{ReflectionBinding #nickname}">
                            <ia:InvokeCommandAction Command="{ReflectionBinding #u.DataContext.SetFirstButton_Click}"
                                                    CommandParameter="{Binding}"/>
                          </ia:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                      </controls:ScrollingTextBlock>
                      <!--<WrapPanel VerticalAlignment="Center" IsVisible="{Binding Remark,Converter={StaticResource IsNullConverter},ConverterParameter=invert}">-->
                      <WrapPanel VerticalAlignment="Center">
                        <!--<TextBlock Text="("></TextBlock>-->
                        <!--<controls:ScrollingTextBlock Text="{Binding Remark}">
                                                    </controls:ScrollingTextBlock>-->
                        <!--<TextBlock Text=")"></TextBlock>-->
                        <!--<PathIcon Data="{StaticResource EditDrawing}" Width="10" Height="10"></PathIcon>-->
                        <controls:ScrollingTextBlock  
                             Padding="10 0 10 0"
                             FontSize="14"
                             Text="{Binding Remark,Mode=TwoWay}" 
                             Foreground="{DynamicResource InactiveForegroundBrushKey}">
                        </controls:ScrollingTextBlock>
                      </WrapPanel>

                    </DockPanel>

                    <WrapPanel Orientation="Horizontal">
                      <TextBlock Text="{Binding AccountName}" FontSize="12" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                      <TextBlock Text="(" FontSize="12" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                      <TextBox Text="{Binding SteamId64_Int,Mode=OneWay}" FontSize="12" Classes="readonlybox" Padding="0" Foreground="{DynamicResource InactiveForegroundBrushKey}" IsReadOnly="True"></TextBox>
                      <TextBlock Text=")" FontSize="12" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                    </WrapPanel>
                  </StackPanel>

                  <WrapPanel VerticalAlignment="Bottom" Orientation="Horizontal">
                    <PathIcon Data="{StaticResource ClockDrawing}" Width="12" VerticalAlignment="Center" Margin="5 0" Foreground="{DynamicResource InactiveForegroundBrushKey}">
                    </PathIcon>
                    <TextBlock Text="{Binding TimeusedTime,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" FontSize="12" VerticalAlignment="Center" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                  </WrapPanel>

                </Panel>
                <Grid Grid.Column="3" RowDefinitions="*,Auto">
                  <Panel>
                    <Button Classes="flatbutton"
                            IsVisible="False"
                            x:Name="delete_btn"
                            Background="Transparent"
                            Cursor="Hand"
                            HorizontalAlignment="Right"
                            Margin="0,0,0,68"
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Command="{ReflectionBinding #u.DataContext.DeleteUserButton_Click}" CommandParameter="{Binding}">
                      <PathIcon Width="12" Data="{DynamicResource CloseDrawing}">
                      </PathIcon>
                    </Button>
                  </Panel>
                  <WrapPanel Grid.Row="1" Orientation="Horizontal">
                    <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}" BorderThickness=".66 .66 .66 0" 
                            ToolTip.Tip="{ReflectionBinding Path=Res.Top,Mode=OneWay,Source={x:Static resx:R.Current}}">
                      <Button Classes="flatbutton" Cursor="Hand"
                              x:Name="firstBtn"
                              HorizontalAlignment="Stretch" MaxWidth="200"
                              Command="{ReflectionBinding #u.DataContext.SetFirstButton_Click}"
                              CommandParameter="{Binding}">
                        <i:Interaction.Behaviors>
                          <ia:DataTriggerBehavior Binding="{Binding First}" ComparisonCondition="Equal" Value="True">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #firstBtn}" PropertyName="IsEnabled" Value="False"/>
                          </ia:DataTriggerBehavior>
                          <ia:DataTriggerBehavior Binding="{Binding First}" ComparisonCondition="Equal" Value="False">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #firstBtn}" PropertyName="IsEnabled" Value="True"/>
                          </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.Top,Mode=OneWay,Source={x:Static resx:R.Current}}"></controls:ScrollingTextBlock>
                      </Button>
                    </Border>
                    <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}" BorderThickness=".66 .66 .66 0" 
                            ToolTip.Tip="{ReflectionBinding Path=Res.Up,Mode=OneWay,Source={x:Static resx:R.Current}}">
                      
                      <Button Classes="flatbutton" Cursor="Hand" 
                              x:Name="upBtn"
                              HorizontalAlignment="Stretch" MaxWidth="200" 
                              Command="{ReflectionBinding #u.DataContext.UpButton_Click}" 
                              CommandParameter="{Binding}">
                        <i:Interaction.Behaviors>
                          <ia:DataTriggerBehavior Binding="{Binding First}" ComparisonCondition="Equal" Value="True">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #upBtn}" PropertyName="IsEnabled" Value="False"/>
                          </ia:DataTriggerBehavior>
                          <ia:DataTriggerBehavior Binding="{Binding First}" ComparisonCondition="Equal" Value="False">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #upBtn}" PropertyName="IsEnabled" Value="True"/>
                          </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.Up,Mode=OneWay,Source={x:Static resx:R.Current}}"></controls:ScrollingTextBlock>
                      </Button>
                    </Border>
                    <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}" BorderThickness="0 .66 0 0" 
                            ToolTip.Tip="{ReflectionBinding Path=Res.Dow,Mode=OneWay,Source={x:Static resx:R.Current}}">
                      <Button Classes="flatbutton" Cursor="Hand" MaxWidth="250" 
                              HorizontalAlignment="Stretch" 
                              x:Name="dowBtn"
                              Command="{ReflectionBinding #u.DataContext.DowButton_Click}" 
                              CommandParameter="{Binding}">
                        <i:Interaction.Behaviors>
                          <ia:DataTriggerBehavior Binding="{Binding End}" ComparisonCondition="Equal" Value="True">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #dowBtn}" PropertyName="IsEnabled" Value="False"/>
                          </ia:DataTriggerBehavior>
                          <ia:DataTriggerBehavior Binding="{Binding End}" ComparisonCondition="Equal" Value="False">
                            <ia:ChangePropertyAction TargetObject="{ReflectionBinding #dowBtn}" PropertyName="IsEnabled" Value="True"/>
                          </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.Dow,Mode=OneWay,Source={x:Static resx:R.Current}}"></controls:ScrollingTextBlock>
                      </Button>
                    </Border>
                  </WrapPanel>
                </Grid>
              </Grid>
            </Border>
          </DataTemplate>
        </ItemsRepeater.ItemTemplate>
      </ItemsRepeater>
    </ScrollViewer>

  </Panel>
</Window>
