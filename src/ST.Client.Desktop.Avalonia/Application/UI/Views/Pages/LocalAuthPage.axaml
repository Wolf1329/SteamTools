<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:System.Application.UI.ViewModels;assembly=System.Application.SteamTools.Client.Desktop"
             xmlns:service="clr-namespace:System.Application.Services;assembly=System.Application.SteamTools.Client.Desktop"
             xmlns:resx="clr-namespace:System.Application.UI.Resx;assembly=System.Application.SteamTools.Client.Desktop"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
             x:Name="u"
             x:DataType="vm:LocalAuthPageViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="System.Application.UI.Views.Pages.LocalAuthPage">
  <Panel HorizontalAlignment="Stretch">

    <TextBlock IsVisible="{CompiledBinding IsAuthenticatorsEmpty}"
      Text="{ReflectionBinding Path=Res.LocalAuth_NoAuthTip,Mode=OneWay,Source={x:Static resx:R.Current}}"
      TextWrapping="WrapWithOverflow"
      VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>

    <!--<StackPanel IsVisible="{CompiledBinding IsAuthenticatorsEmptyAndHasPassword}" VerticalAlignment="Center" HorizontalAlignment="Center" Spacing="10">
      <TextBlock
        Text="{ReflectionBinding Path=Res.LocalAuth_NoAuthTip,Mode=OneWay,Source={x:Static resx:R.Current}}"
        TextWrapping="WrapWithOverflow"></TextBlock>
    </StackPanel>-->

    <ScrollViewer  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="40 0 40 10">
      <ItemsRepeater Items="{Binding Authenticators,Mode=OneWay}">
        <ItemsRepeater.Layout>
          <UniformGridLayout ItemsJustification="SpaceAround"
                             MinRowSpacing="20"  MaximumRowsOrColumns="8"/>
          <!--<WrapLayout HorizontalSpacing="40"
                      VerticalSpacing="20" Orientation="Horizontal"></WrapLayout>-->
        </ItemsRepeater.Layout>
        <ItemsRepeater.ItemTemplate>
          <DataTemplate>
            <Border x:Name="panel" Classes="paper" Width="250" Height="250" Background="{DynamicResource ThemeBrushKey}">
              <Border.ContextMenu>
                <ContextMenu>
                  <MenuItem
                            Header="{ReflectionBinding Path=Res.LocalAuth_Copy,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Command="{ReflectionBinding #u.DataContext.CopyCodeCilp}"
                            CommandParameter="{Binding}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource CopyDrawing}" Width="14"></PathIcon>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="-"></MenuItem>
                  <MenuItem
                            Header="{ReflectionBinding Path=Res.MoveUp,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Command="{ReflectionBinding #u.DataContext.UpMoveOrderById}"
                            CommandParameter="{Binding}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource ChevronDownDrawing}" Width="14">
                        <PathIcon.RenderTransform>
                          <RotateTransform Angle="180"></RotateTransform>
                        </PathIcon.RenderTransform>
                      </PathIcon>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem
                            Header="{ReflectionBinding Path=Res.MoveDown,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Command="{ReflectionBinding #u.DataContext.DownMoveOrderById}"
                            CommandParameter="{Binding}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource ChevronDownDrawing}" Width="14">
                      </PathIcon>
                    </MenuItem.Icon>
                  </MenuItem>
                </ContextMenu>
              </Border.ContextMenu>
              <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{ReflectionBinding #panel}">
                  <ia:ChangePropertyAction TargetObject="{ReflectionBinding #delete_btn}" PropertyName="IsVisible" Value="True"/>
                </ia:EventTriggerBehavior>
                <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{ReflectionBinding #panel}">
                  <ia:ChangePropertyAction TargetObject="{ReflectionBinding #delete_btn}" PropertyName="IsVisible" Value="False"/>
                </ia:EventTriggerBehavior>
              </i:Interaction.Behaviors>
              <Grid RowDefinitions="30,165,Auto">
                <DockPanel VerticalAlignment="Center">
                  <TextBox VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_AuthName,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                   Text="{Binding Name,Mode=TwoWay}"
                                   Classes="readonlybox"
                                   DockPanel.Dock="Left"
                                   Padding="10,5"
                                   FontSize="16"
                                   Foreground="{DynamicResource HighlightForegroundBrushKey}">
                    <TextBox.InnerRightContent>
                      <PathIcon Data="{StaticResource EditDrawing}"
                                Width="10" Height="10"
                                Opacity="0.8"
                                VerticalAlignment="Center" HorizontalAlignment="Left"
                                Margin="0">
                      </PathIcon>
                    </TextBox.InnerRightContent>
                  </TextBox>
                  <Button DockPanel.Dock="Right" x:Name="delete_btn" Classes="flatbutton" IsVisible="False" Background="Transparent" HorizontalAlignment="Right" Cursor="Hand" ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                          Command="{ReflectionBinding #u.DataContext.DeleteAuth}" CommandParameter="{Binding}">
                    <PathIcon Data="{DynamicResource CloseDrawing}" Width="12"></PathIcon>
                  </Button>
                </DockPanel>

                <TextBlock Grid.Row="1" Text="------" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="64" IsVisible="{Binding !IsShowCode}" Foreground="{DynamicResource HighlightForegroundBrushKey}"></TextBlock>
                <TextBlock Grid.Row="1" Text="{Binding CurrentCode}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="54" IsVisible="{Binding IsShowCode}" Foreground="{DynamicResource HighlightForegroundBrushKey}">
                </TextBlock>


                <DockPanel Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                  <Panel DockPanel.Dock="Top">
                    <Separator Height="13" IsVisible="{Binding !IsShowCode}"></Separator>
                    <ProgressBar  Value="{Binding CodeCountdown,Mode=TwoWay}" IsVisible="{Binding IsShowCode}" Margin="0 10 0 4"/>
                    <Separator Classes="Separator" Margin="0 14 0 4"/>
                  </Panel>

                  <!--<controls:ScrollingTextBlock HorizontalAlignment="Center" Width="{Binding #panel.Width}" Text="{Binding}" FontSize="14" Foreground="{DynamicResource HighlightForegroundBrushKey}" ></controls:ScrollingTextBlock>-->

                  <StackPanel Orientation="Horizontal" Spacing="5">
                    <Button Cursor="Hand" Classes="flatbutton" Command="{ReflectionBinding #u.DataContext.ShowAuthCode}" CommandParameter="{Binding}"
                            ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ShowAuthCode,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                      <PathIcon Data="{DynamicResource SearchDrawing}" Width="20"></PathIcon>
                    </Button>

                    <Button Cursor="Hand" Classes="flatbutton" Command="{ReflectionBinding #u.DataContext.ShowSteamAuthTrade}" CommandParameter="{Binding}"
                            ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_AuthTrade,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                      <PathIcon Data="{DynamicResource TradeDrawing}" Width="20"></PathIcon>
                    </Button>

                    <!--<Button Cursor="Hand" Classes="flatbutton"
                                                    ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_CloudSync,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                                                <PathIcon Data="{DynamicResource CloudDrawing}" Width="20"></PathIcon>
                                            </Button>-->

                    <Button Cursor="Hand" Classes="flatbutton" Command="{ReflectionBinding #u.DataContext.ShowSteamAuthData}" CommandParameter="{Binding}"
                            ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ShowAuthInfo,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                      <PathIcon Data="{DynamicResource SlideSearchDrawing}" Width="20"></PathIcon>
                    </Button>
                  </StackPanel>

                  <Button Cursor="Hand" Classes="flatbutton" Command="{ReflectionBinding #u.DataContext.CopyCodeCilp}" CommandParameter="{Binding}" HorizontalAlignment="Right"
                          ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_Copy,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                    <PathIcon Data="{DynamicResource CopyDrawing}" Width="20"></PathIcon>
                  </Button>
                </DockPanel>
              </Grid>
            </Border>
          </DataTemplate>
        </ItemsRepeater.ItemTemplate>
      </ItemsRepeater>
    </ScrollViewer>
  </Panel>
</UserControl>
